# Makefile.in generated automatically by automake 1.4-p4 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
CC = @CC@
LIBOBJS = @LIBOBJS@
MAKEINFO = @MAKEINFO@
PACKAGE = @PACKAGE@
SDL_CONFIG = @SDL_CONFIG@
UNZIP_SRC = @UNZIP_SRC@
VERSION = @VERSION@

bin_PROGRAMS = gngb gngb_dbg

gngb_SOURCES = cpu.c cpu.h emu.c emu.h frame_skip.c frame_skip.h global.h interrupt.c interrupt.h main.c memory.c memory.h message.c message.h rom.c rom.h serial.c  serial.h sgb.c sgb.h sound.c sound.h tiny_font.h vram.c vram.h video_yuy2.c video_yuv.c video_yuv.h video_yv12.c video_std.c video_gl.c video_gl.h video_std.h menu.h menu.c menu_image.h fileio.h fileio.c save.h save.c @UNZIP_SRC@ 

gngb_dbg_SOURCES = cpu.c cpu.h emu.c emu.h frame_skip.c frame_skip.h global.h interrupt.c interrupt.h  memory.c memory.h message.c message.h rom.c rom.h serial.c  serial.h sgb.c sgb.h sound.c sound.h tiny_font.h vram.c vram.h video_yuy2.c video_yuv.c video_yuv.h video_yv12.c video_std.c video_gl.c video_gl.h video_std.h menu.h menu.c menu_image.h fileio.h fileio.c save.h save.c  @UNZIP_SRC@ 

gngb_dbg_LDADD = debuger/cmd.o debuger/op.o debuger/cmd_code.o debuger/cmd_cpu.o debuger/cmd_lcd.o debuger/args.o debuger/main.o @LIBOBJS@ -lreadline

gngb_LDADD = @LIBOBJS@
EXTRA_DIST = getopt.h
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES = 
PROGRAMS =  $(bin_PROGRAMS)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
gngb_OBJECTS =  cpu.o emu.o frame_skip.o interrupt.o main.o memory.o \
message.o rom.o serial.o sgb.o sound.o vram.o video_yuy2.o video_yuv.o \
video_yv12.o video_std.o video_gl.o menu.o fileio.o save.o
gngb_DEPENDENCIES =  @LIBOBJS@
gngb_LDFLAGS = 
gngb_dbg_OBJECTS =  cpu.o emu.o frame_skip.o interrupt.o memory.o \
message.o rom.o serial.o sgb.o sound.o vram.o video_yuy2.o video_yuv.o \
video_yv12.o video_std.o video_gl.o menu.o fileio.o save.o
gngb_dbg_DEPENDENCIES =  debuger/cmd.o debuger/op.o debuger/cmd_code.o \
debuger/cmd_cpu.o debuger/cmd_lcd.o debuger/args.o debuger/main.o \
@LIBOBJS@
gngb_dbg_LDFLAGS = 
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  Makefile.am Makefile.in getopt.c getopt1.c unzip.c


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP_ENV = --best
SOURCES = $(gngb_SOURCES) $(gngb_dbg_SOURCES)
OBJECTS = $(gngb_OBJECTS) $(gngb_dbg_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .o .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps src/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "  $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	     $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

.c.o:
	$(COMPILE) -c $<

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

gngb: $(gngb_OBJECTS) $(gngb_DEPENDENCIES)
	@rm -f gngb
	$(LINK) $(gngb_LDFLAGS) $(gngb_OBJECTS) $(gngb_LDADD) $(LIBS)

gngb_dbg: $(gngb_dbg_OBJECTS) $(gngb_dbg_DEPENDENCIES)
	@rm -f gngb_dbg
	$(LINK) $(gngb_dbg_LDFLAGS) $(gngb_dbg_OBJECTS) $(gngb_dbg_LDADD) $(LIBS)

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = src

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
cpu.o: cpu.c rom.h global.h ../config.h cpu.h memory.h interrupt.h \
	serial.h emu.h fileio.h
emu.o: emu.c ../config.h getopt.h emu.h global.h fileio.h message.h \
	rom.h vram.h serial.h memory.h cpu.h interrupt.h menu.h \
	frame_skip.h sound.h sgb.h video_std.h save.h
fileio.o: fileio.c ../config.h getopt.h fileio.h unzip.h
frame_skip.o: frame_skip.c ../config.h getopt.h frame_skip.h message.h \
	emu.h global.h fileio.h
interrupt.o: interrupt.c interrupt.h global.h ../config.h frame_skip.h \
	memory.h vram.h cpu.h emu.h fileio.h rom.h
main.o: main.c ../config.h getopt.h global.h emu.h fileio.h memory.h \
	cpu.h rom.h vram.h interrupt.h serial.h frame_skip.h sgb.h \
	sound.h save.h
memory.o: memory.c memory.h global.h ../config.h emu.h fileio.h cpu.h \
	rom.h vram.h interrupt.h frame_skip.h sound.h serial.h \
	message.h sgb.h
menu.o: menu.c ../config.h memory.h global.h emu.h fileio.h menu.h \
	message.h vram.h video_std.h rom.h sound.h menu_image.h
message.o: message.c global.h ../config.h tiny_font.h message.h emu.h \
	fileio.h menu.h video_std.h vram.h
rom.o: rom.c ../config.h getopt.h rom.h global.h memory.h emu.h fileio.h \
	cpu.h interrupt.h vram.h sound.h save.h
save.o: save.c emu.h global.h ../config.h fileio.h rom.h memory.h vram.h \
	interrupt.h cpu.h
serial.o: serial.c ../config.h getopt.h serial.h global.h interrupt.h \
	memory.h emu.h fileio.h
sgb.o: sgb.c ../config.h memory.h global.h sgb.h vram.h rom.h emu.h \
	fileio.h
sound.o: sound.c ../config.h emu.h global.h fileio.h sound.h memory.h \
	interrupt.h cpu.h
unzip.o: unzip.c unzip.h
video_gl.o: video_gl.c global.h ../config.h memory.h vram.h message.h \
	tiny_font.h emu.h fileio.h interrupt.h sgb.h video_std.h \
	video_gl.h
video_std.o: video_std.c global.h ../config.h memory.h vram.h message.h \
	tiny_font.h emu.h fileio.h interrupt.h sgb.h video_std.h menu.h
video_yuv.o: video_yuv.c ../config.h cpu.h global.h emu.h fileio.h \
	vram.h video_yuv.h memory.h message.h
video_yuy2.o: video_yuy2.c ../config.h global.h memory.h video_yuv.h \
	vram.h video_std.h sgb.h message.h emu.h fileio.h interrupt.h
video_yv12.o: video_yv12.c global.h ../config.h memory.h video_yuv.h \
	vram.h video_std.h sgb.h message.h emu.h fileio.h interrupt.h
vram.o: vram.c vram.h global.h ../config.h memory.h rom.h interrupt.h \
	message.h emu.h fileio.h sgb.h video_std.h menu.h

info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-binPROGRAMS
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-binPROGRAMS
uninstall: uninstall-am
all-am: Makefile $(PROGRAMS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(bindir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-binPROGRAMS mostlyclean-compile \
		mostlyclean-tags mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-binPROGRAMS clean-compile clean-tags clean-generic \
		mostlyclean-am

clean: clean-am

distclean-am:  distclean-binPROGRAMS distclean-compile distclean-tags \
		distclean-generic clean-am

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-binPROGRAMS \
		maintainer-clean-compile maintainer-clean-tags \
		maintainer-clean-generic distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-binPROGRAMS distclean-binPROGRAMS clean-binPROGRAMS \
maintainer-clean-binPROGRAMS uninstall-binPROGRAMS install-binPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile tags mostlyclean-tags distclean-tags \
clean-tags maintainer-clean-tags distdir info-am info dvi-am dvi check \
check-am installcheck-am installcheck install-exec-am install-exec \
install-data-am install-data install-am install uninstall-am uninstall \
all-redirect all-am all installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


debuger/cmd.o : debuger/cmd.c
	$(COMPILE) -c  debuger/cmd.c -o debuger/cmd.o

debuger/op.o : debuger/op.c
	$(COMPILE) -c  debuger/op.c -o debuger/op.o

debuger/cmd_code.o : debuger/cmd_code.c
	$(COMPILE) -c  debuger/cmd_code.c -o debuger/cmd_code.o

debuger/cmd_cpu.o : debuger/cmd_cpu.c
	$(COMPILE) -c  debuger/cmd_cpu.c -o debuger/cmd_cpu.o

debuger/cmd_lcd.o : debuger/cmd_lcd.c
	$(COMPILE) -c  debuger/cmd_lcd.c -o debuger/cmd_lcd.o

debuger/args.o : debuger/args.c
	$(COMPILE) -c  debuger/args.c -o debuger/args.o

debuger/main.o : debuger/main.c
	$(COMPILE) -c  debuger/main.c -o debuger/main.o

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
