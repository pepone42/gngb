dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/cpu.c)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(gngb,20011202)

CFLAGS="$CFLAGS"

OUTPUT="Makefile src/Makefile"

dnl Checks for programs.
AC_PROG_CC

dnl Checks for libraries.

AC_CHECK_LIB(pthread, pthread_create,,AC_MSG_ERROR(SDL library needs pthread Library))

AC_CHECK_PROG(SDL_CONFIG, sdl-config, yes,no)
if test "$SDL_CONFIG" = yes ; then
CFLAGS="$CFLAGS -DSDL_YUV `sdl-config --cflags`";
LIBS="$LIBS `sdl-config --libs`";
AC_CHECK_LIB(SDL, SDL_Init,,AC_MSG_ERROR(can't find on your system SDL Library))
fi

dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h sys/time.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_HEADER_TIME

dnl Checks for library functions.
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(gettimeofday mkdir socket strtol)

dnl Opengl Mode

AC_ARG_WITH(gl,[  --with-gl               enable opengl support], [], [with_gl=yes])

if test "$with_gl" = yes ; then
AC_CHECK_HEADER(GL/gl.h,,with_gl=no)
AC_CHECK_LIB(GL, glBegin,
[LIBS="$LIBS -L/usr/X11R6/lib -lGL";
CFLAGS="$CFLAGS -DSDL_GL ";]
,with_gl=no)
fi

dnl Debuger Curses (old version)

AC_ARG_WITH(debuger,[  --with-debuger-curses          add a debuger (Curses (discontinued))], [], [with_debuger_curses=no])

if test "$with_debuger_curses" = yes; then 
AC_CHECK_LIB(ncurses, newwin,
[DEBUG_LIBS="$DEBUG_LIBS -lncurses";]
,with_debuger_curses=no)
AC_CHECK_LIB(panel, new_panel,
[DEBUG_LIBS="$DEBUG_LIBS -lpanel";]
,with_debuger_curses=no)
AC_CHECK_LIB(form, new_form,
[DEBUG_LIBS="$DEBUG_LIBS -lform";]
,with_debuger_curses=no)

DEBUG_CFLAGS="-DDEBUG"
AC_SUBST(DEBUG_CFLAGS)
AC_SUBST(DEBUG_LIBS)

fi

AM_CONDITIONAL(MAKE_DEBUGER_CURSES, test "$with_debuger_curses" = yes)


dnl Debuger Gtk (new debuger)

AC_ARG_WITH(debuger,[  --with-debuger          add a debuger (Gtk)], [], [with_debuger=no])

if test "$with_debuger" = yes; then 
DEBUG_CFLAGS="-DDEBUG"

AC_CHECK_PROG(GTK_CONFIG, gtk-config, yes,no)
if test "$GTK_CONFIG" = yes ; then
DEBUG_CFLAGS="$DEBUG_CFLAGS `gtk-config --cflags`";
DEBUG_LIBS="$DEBUG_LIBS `gtk-config --libs`";
T_CFLAGS=$CFLAGS
T_LIBS=$LIBS
CFLAGS="$CFLAGS $DEBUG_FLAGS"
LIBS="$LIBS $DEBUG_LIBS"
AC_CHECK_LIB(gtk, gtk_init,,AC_MSG_ERROR(can't find on your system Gtk Library))
CFLAGS=$T_CFLAGS
LIBS=$T_LIBS
fi

AC_CHECK_PROG(GLIB_CONFIG, glib-config, yes,no)
if test "$GLIB_CONFIG" = yes ; then
DEBUG_CFLAGS="$DEBUG_CFLAGS `glib-config --cflags`";
DEBUG_LIBS="$DEBUG_LIBS `glib-config --libs`";
T_CFLAGS=$CFLAGS
T_LIBS=$LIBS
CFLAGS="$CFLAGS $DEBUG_FLAGS"
LIBS="$LIBS $DEBUG_LIBS"
AC_CHECK_LIB(glib, g_strdup,,AC_MSG_ERROR(can't find on your system GLib Library))
CFLAGS=$T_CFLAGS
LIBS=$T_LIBS
fi

AC_SUBST(DEBUG_CFLAGS)
AC_SUBST(DEBUG_LIBS)
fi

AM_CONDITIONAL(MAKE_DEBUGER, test "$with_debuger" = yes)

dnl Opt Flag

dnl Arch

case `uname -m` in
*686) arch_info=i686 ;;
*i586) arch_info=i586 ;;
*i486) arch_info=i486 ;;
*i386) arch_info=i386 ;;
*sun4u) arch_info=sun4u ;;
*) arch_info=no ;;
esac

AC_MSG_RESULT(Architeture: $arch_info) 

dnl System

sys_info=`uname -s`

AC_MSG_RESULT(System: $sys_info)

case $arch_info in
i686|i586|i486|i386) OPT="-O3  -Wno-unused -funroll-loops -fstrength-reduce \
                          -ffast-math -malign-functions=2 -malign-jumps=2 \
                          -malign-loops=2 -fomit-frame-pointer -Wall -g" ;;
sun4u)               OPT="-O3  -Wno-unused -funroll-loops -fstrength-reduce \
                          -ffast-math -malign-functions=4 -malign-jumps=4 \
                          -malign-loops=4 -fomit-frame-pointer -Wall -g" ;;
no)                  OPT="-O3 -wall -g" ;;
esac

case $sys_info in
SunOS) LDOPT="-lnsl -lsocket -lresolv" ;;
esac

CFLAGS="$CFLAGS $OPT"
LIBS="$LIBS $LDOPT"

AC_OUTPUT(Makefile src/Makefile src/gngb_debuger/Makefile src/gngb_debuger_curses/Makefile)




